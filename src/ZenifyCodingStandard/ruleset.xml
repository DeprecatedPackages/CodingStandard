<?xml version="1.0" ?>
<ruleset name="Zenify">
    <description>The Zenify coding standard.</description>

    <!-- Classes -->
    <rule ref="ZenifyCodingStandard.Classes.ClassDeclaration" />
    <rule ref="ZenifyCodingStandard.Classes.OneClassPerFileApartExceptions" />

    <!-- Commenting -->
    <rule ref="ZenifyCodingStandard.Commenting.BlockPropertyComment" />
    <rule ref="ZenifyCodingStandard.Commenting.ComponentFactoryComment" />

    <!-- Control Structures -->
    <rule ref="ZenifyCodingStandard.ControlStructures.SwitchDeclaration" />
    <rule ref="ZenifyCodingStandard.ControlStructures.ControlSignature" />
    <rule ref="ZenifyCodingStandard.ControlStructures.WeakTypesComparisonsWithExplanation" />

    <!-- Namespace -->
    <rule ref="ZenifyCodingStandard.Namespaces.NamespaceDeclaration" />
    <rule ref="ZenifyCodingStandard.Namespaces.UseDeclaration">
        <properties>
            <property name="blankLinesAfterUseStatement" value="2" />
        </properties>
    </rule>

    <!-- Scope -->
    <rule ref="ZenifyCodingStandard.Scope.MethodScope" />

    <!--Whitespace -->
    <rule ref="ZenifyCodingStandard.Whitespace.ConcatOperator" />
    <rule ref="ZenifyCodingStandard.Whitespace.ExclamationMark" />
    <rule ref="ZenifyCodingStandard.Whitespace.IfElse" />
    <rule ref="ZenifyCodingStandard.Whitespace.InBetweenMethodSpacing">
        <properties>
            <property name="blankLinesBetweenMethods" value="2" />
        </properties>
    </rule>
    <rule ref="ZenifyCodingStandard.Whitespace.InBetweenExceptionSpacing">
        <properties>
            <property name="blankLinesBetweenExceptions" value="2" />
        </properties>
    </rule>
    <rule ref="ZenifyCodingStandard.Whitespace.PropertiesMethodsMutualSpacing">
        <properties>
            <property name="blankLinesBetweenPropertiesAndMethods" value="2" />
        </properties>
    </rule>


    <!-- PHP_CodeSniffer default sets -->


    <!-- CodeAnalysis -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

    <!-- Files -->
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120" />
            <property name="absoluteLineLimit" value="120" />
        </properties>
        <severity>3</severity>
    </rule>
    <rule ref="Generic.Files.OneInterfacePerFile" />
    <rule ref="Generic.Files.OneTraitPerFile" />
    <rule ref="PSR1.Files.SideEffects" />
    <rule ref="PSR2.Files.EndFileNewline" />
    <rule ref="Zend.Files.ClosingTag" />

    <!-- Classes -->
    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="PSR2.Classes.PropertyDeclaration" />
    <rule ref="Squiz.Classes.ValidClassName" />
    <rule ref="Squiz.Classes.LowercaseClassKeywords" />

    <!-- ControlStructures -->
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="PEAR.ControlStructures.MultiLineCondition">
        <properties>
            <property name="indent" value="1" />
        </properties>
    </rule>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration" />
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration" />

    <!-- Formatting -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.DisallowMultipleStatements.SameLine"><severity>0</severity></rule>
    <rule ref="Generic.Formatting.SpaceAfterCast" />

    <!-- Functions -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman" />
    <rule ref="PEAR.Functions.ValidDefaultValue" />
    <rule ref="Squiz.Functions.FunctionDeclaration" />
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1" />
        </properties>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration" />
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords" />

    <!-- Methods -->
    <rule ref="PSR2.Methods.MethodDeclaration" />

    <!-- Metrics -->
    <rule ref="Generic.Metrics.CyclomaticComplexity" />
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="3" />
            <property name="absoluteNestingLevel" value="6" />
        </properties>
    </rule>

    <!-- NamingConventions -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />

    <!-- PHP -->
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.UpperCaseConstant" />
    <rule ref="MySource.PHP.EvalObjectFactory" />
    <rule ref="MySource.PHP.GetRequestData" />
    <rule ref="Squiz.PHP.NonExecutableCode" />

    <!-- WhiteSpace -->
    <rule ref="Generic.WhiteSpace.DisallowSpaceIndent" />
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing" />
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace" />
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false" />
        </properties>
    </rule>
</ruleset>
